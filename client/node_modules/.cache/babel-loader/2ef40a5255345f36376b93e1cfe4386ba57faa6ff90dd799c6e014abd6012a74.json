{"ast":null,"code":"import React from'react';import{VStack,ButtonGroup,Heading,FormControl,FormLabel,Button,FormErrorMessage,Input}from'@chakra-ui/react';import{useFormik}from'formik';import*as Yup from\"yup\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const formik=useFormik({initalValues:{username:\"\",password:\"\"},validationSchema:Yup.object({username:Yup.string().required(\"Username required!\").min(6,\"Username too short!\").max(28,\"Username too long!\"),password:Yup.string().required(\"Password required!\").min(6,\"Password too short!\").max(28,\"Password too long!\")}),onSubmit:(values,actions)=>{alert(JSON.stringify(values,null,2));actions.resetForm();}});return/*#__PURE__*/_jsxs(VStack,{as:\"form\",w:{base:\"90%\",md:\"500px\"},m:\"auto\",justify:\"center\",h:\"100vh\",spacing:\"1rem\",onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(Heading,{children:\"Log In\"}),/*#__PURE__*/_jsxs(FormControl,{isInvalid:formik.errors.username&&formik.touched.username,children:[/*#__PURE__*/_jsx(FormLabel,{fontSize:\"lg\",children:\"Username\"}),/*#__PURE__*/_jsx(Input,{name:\"username\",placeholder:\"Enter username\",autoComplete:\"off\",size:\"lg\",value:formik.values.username,onChange:formik.handleChange,onBlur:formik.handleBlur}),/*#__PURE__*/_jsx(FormErrorMessage,{children:\"Invalid username\"})]}),/*#__PURE__*/_jsxs(FormControl,{isInvalid:formik.errors.password&&formik.touched.password,children:[/*#__PURE__*/_jsx(FormLabel,{fontSize:\"lg\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{name:\"password\",placeholder:\"Enter password\",autoComplete:\"off\",size:\"lg\",type:\"password\",value:formik.values.password,onChange:formik.handleChange,onBlur:formik.handleBlur}),/*#__PURE__*/_jsx(FormErrorMessage,{children:\"Invalid password\"})]}),/*#__PURE__*/_jsxs(ButtonGroup,{pt:\"1rem\",children:[/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",type:\"submit\",children:\"Log In\"}),/*#__PURE__*/_jsx(Button,{children:\"Create Account\"})]})]});};export default Login;","map":{"version":3,"names":["React","VStack","ButtonGroup","Heading","FormControl","FormLabel","Button","FormErrorMessage","Input","useFormik","Yup","jsx","_jsx","jsxs","_jsxs","Login","formik","initalValues","username","password","validationSchema","object","string","required","min","max","onSubmit","values","actions","alert","JSON","stringify","resetForm","as","w","base","md","m","justify","h","spacing","handleSubmit","children","isInvalid","errors","touched","fontSize","name","placeholder","autoComplete","size","value","onChange","handleChange","onBlur","handleBlur","type","pt","colorScheme"],"sources":["/home/filipe/dev/projects/react-redis-chat/client/src/components/Login/Login.jsx"],"sourcesContent":["import React from 'react'\nimport { VStack, ButtonGroup, Heading, FormControl, FormLabel, Button, \n         FormErrorMessage, Input} from '@chakra-ui/react';\n\nimport {useFormik} from 'formik';\nimport * as Yup from \"yup\";\n\nconst Login = () => {\n    const formik = useFormik({\n        initalValues: {username: \"\", password: \"\"},\n        validationSchema: Yup.object({\n          username: Yup.string().required(\"Username required!\")\n                                .min(6,\"Username too short!\")\n                                .max(28,\"Username too long!\"),\n          password: Yup.string().required(\"Password required!\")\n                                .min(6,\"Password too short!\")\n                                .max(28,\"Password too long!\")\n\n        }),\n        onSubmit: (values, actions) => {\n          alert(JSON.stringify(values, null, 2));\n          actions.resetForm();\n        }\n    })\n  return  <VStack as=\"form\" \n                  w={{base:\"90%\", \n                  md: \"500px\"}} \n                  m=\"auto\"\n                  justify=\"center\" \n                  h=\"100vh\" \n                  spacing='1rem'\n                  onSubmit={formik.handleSubmit}>\n            \n            <Heading>\n              Log In\n            </Heading>\n            \n            <FormControl isInvalid={formik.errors.username && formik.touched.username}>\n              <FormLabel fontSize='lg'>Username</FormLabel>  \n              <Input  name='username' \n                      placeholder='Enter username'\n                      autoComplete='off' \n                      size='lg'\n                      value={formik.values.username}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}/>\n              <FormErrorMessage>Invalid username</FormErrorMessage>\n            </FormControl>\n\n            <FormControl isInvalid={formik.errors.password && formik.touched.password}>\n              <FormLabel fontSize='lg'>Password</FormLabel>  \n              <Input  name='password'\n                      placeholder='Enter password'\n                      autoComplete='off' \n                      size='lg'\n                      type='password'\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}/>\n              <FormErrorMessage>Invalid password</FormErrorMessage>\n              \n            </FormControl>\n\n            <ButtonGroup pt=\"1rem\">\n              <Button colorScheme='teal' type='submit'>Log In</Button>\n              <Button>Create Account</Button>\n            </ButtonGroup>\n          </VStack>\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}