{"ast":null,"code":"var _jsxFileName = \"/home/filipe/dev/projects/react-redis-chat/client/src/components/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { VStack, ButtonGroup, Heading, FormControl, FormLabel, Button, FormErrorMessage, Input } from '@chakra-ui/react';\nimport { Formik, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from './TextField';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Username required!').min(6, 'Username too short!').max(28, 'Username too long!'),\n      password: Yup.string().required('Password required!').min(6, 'Password too short!').max(28, 'Password too long!')\n    }),\n    onSubmit: (values, actions) => {\n      alert(JSON.stringify(values, null, 2));\n      actions.resetForm();\n    },\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      as: \"form\",\n      w: {\n        base: '90%',\n        md: '500px'\n      },\n      m: \"auto\",\n      justify: \"center\",\n      h: \"100vh\",\n      spacing: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"username\",\n        placeholder: \"Enter Username\",\n        autoComplete: \"off\",\n        label: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"password\",\n        placeholder: \"Enter password\",\n        autoComplete: \"off\",\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        pt: \"1rem\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/register\"),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","VStack","ButtonGroup","Heading","FormControl","FormLabel","Button","FormErrorMessage","Input","Formik","useFormik","Yup","TextField","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","initialValues","username","password","validationSchema","object","string","required","min","max","onSubmit","values","actions","alert","JSON","stringify","resetForm","children","as","w","base","md","m","justify","h","spacing","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","autoComplete","label","pt","colorScheme","type","onClick","_c","$RefreshReg$"],"sources":["/home/filipe/dev/projects/react-redis-chat/client/src/components/Login/Login.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  VStack,\n  ButtonGroup,\n  Heading,\n  FormControl,\n  FormLabel,\n  Button,\n  FormErrorMessage,\n  Input,\n} from '@chakra-ui/react';\nimport { Formik, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from './TextField';\nimport {useNavigate} from 'react-router'\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '' }}\n      validationSchema={Yup.object({\n        username: Yup.string()\n          .required('Username required!')\n          .min(6, 'Username too short!')\n          .max(28, 'Username too long!'),\n        password: Yup.string()\n          .required('Password required!')\n          .min(6, 'Password too short!')\n          .max(28, 'Password too long!'),\n      })}\n      onSubmit={(values, actions) => {\n        alert(JSON.stringify(values, null, 2));\n        actions.resetForm();\n      }}\n    >\n        <VStack\n          as=\"form\"\n          w={{ base: '90%', md: '500px' }}\n          m=\"auto\"\n          justify=\"center\"\n          h=\"100vh\"\n          spacing=\"1rem\"\n        >\n          <Heading>Log In</Heading>\n\n          <TextField  name=\"username\" \n                      placeholder=\"Enter Username\"\n                      autoComplete=\"off\"\n                      label=\"Username\"/>\n\n          <TextField  name=\"password\" \n                      placeholder=\"Enter password\"\n                      autoComplete=\"off\"\n                      label=\"Password\"/>\n\n\n          <ButtonGroup pt=\"1rem\">\n            <Button colorScheme=\"teal\" type=\"submit\">\n              Log In\n            </Button>\n            <Button onClick={() => navigate(\"/register\")}>Create Account</Button>\n          </ButtonGroup>\n        </VStack>\n    </Formik>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}