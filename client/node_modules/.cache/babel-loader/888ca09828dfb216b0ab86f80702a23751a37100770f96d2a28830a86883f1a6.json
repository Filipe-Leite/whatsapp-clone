{"ast":null,"code":"import{Button,useColorMode}from\"@chakra-ui/react\";import{MoonIcon,SunIcon}from\"@chakra-ui/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";const ToggleColorMode=()=>{const{colorMode,toggleColorMode}=useColorMode();return/*#__PURE__*/_jsx(Button,{onClick:()=>toggleColorMode(),pos:\"absolute\",top:\"0\",right:\"0\",m:\"1rem\",children:colorMode===\"dark\"?/*#__PURE__*/_jsx(SunIcon,{color:\"orange.200\"}):/*#__PURE__*/_jsx(MoonIcon,{color:\"blue.600\"})});};export default ToggleColorMode;","map":{"version":3,"names":["Button","useColorMode","MoonIcon","SunIcon","jsx","_jsx","ToggleColorMode","colorMode","toggleColorMode","onClick","pos","top","right","m","children","color"],"sources":["/home/filipe/dev/projects/react-redis-chat/client/src/components/ToggleColorMode.jsx"],"sourcesContent":["import { Button, useColorMode } from \"@chakra-ui/react\";\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\n\nconst ToggleColorMode = () => {\n    const {colorMode, toggleColorMode} = useColorMode();\n\n    return  <Button \n                onClick={() => toggleColorMode()}\n                pos=\"absolute\"\n                top=\"0\"\n                right=\"0\"\n                m=\"1rem\"\n            >\n                {colorMode === \"dark\" ? (\n                    <SunIcon color=\"orange.200\"/>\n                ):(  \n                    <MoonIcon color=\"blue.600\"/>\n                )}\n            </Button>\n}\n\nexport default ToggleColorMode;"],"mappings":"AAAA,OAASA,MAAM,CAAEC,YAAY,KAAQ,kBAAkB,CACvD,OAASC,QAAQ,CAAEC,OAAO,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,SAAS,CAAEC,eAAe,CAAC,CAAGP,YAAY,CAAC,CAAC,CAEnD,mBAAQI,IAAA,CAACL,MAAM,EACHS,OAAO,CAAEA,CAAA,GAAMD,eAAe,CAAC,CAAE,CACjCE,GAAG,CAAC,UAAU,CACdC,GAAG,CAAC,GAAG,CACPC,KAAK,CAAC,GAAG,CACTC,CAAC,CAAC,MAAM,CAAAC,QAAA,CAEPP,SAAS,GAAK,MAAM,cACjBF,IAAA,CAACF,OAAO,EAACY,KAAK,CAAC,YAAY,CAAC,CAAC,cAE7BV,IAAA,CAACH,QAAQ,EAACa,KAAK,CAAC,UAAU,CAAC,CAC9B,CACG,CAAC,CACrB,CAAC,CAED,cAAe,CAAAT,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}