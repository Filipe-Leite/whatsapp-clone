{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport socket from \"../../socket\";\nimport { AccountContext } from \"../AccountContext\";\nconst useSocketSetup = setFriendList => {\n  _s();\n  const {\n    setUser\n  } = useContext(AccountContext);\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"friends\", friendList => {\n      setFriendList(friendList);\n    });\n    socket.on(\"connected\", (status, username) => {\n      setFriendList(prevFriends => {\n        const friends = [...prevFriends];\n        return friends.map(friend => {\n          if (friends.username === username) {}\n        });\n      });\n    });\n    socket.on(\"connect_error\", () => {\n      setUser({\n        loggedIn: false\n      });\n    });\n    console.log(\"useSocketSetup\");\n    return () => {\n      socket.off(\"connect_error\");\n    };\n  }, [setUser]);\n};\n_s(useSocketSetup, \"BemzQuH4f11cYQSenZt5+cm7gqw=\");\nexport default useSocketSetup;","map":{"version":3,"names":["useContext","useEffect","socket","AccountContext","useSocketSetup","setFriendList","_s","setUser","connect","on","friendList","status","username","prevFriends","friends","map","friend","loggedIn","console","log","off"],"sources":["/home/filipe/dev/tutorials/whatsapp-clone/client/src/components/Home/useSocketSetup.jsx"],"sourcesContent":["import { useContext,useEffect } from \"react\";\nimport socket from \"../../socket\";\nimport {AccountContext} from \"../AccountContext\";\n\nconst useSocketSetup = setFriendList => {\n    const {setUser} =useContext(AccountContext);\n\n    useEffect(() => {\n        socket.connect();\n        socket.on(\"friends\", friendList => {\n            setFriendList(friendList)\n        });\n\n        socket.on(\"connected\", (status, username) => {\n            setFriendList(prevFriends => {\n                const friends = [...prevFriends];\n                return friends.map(friend => {\n                    if (friends.username === username){\n\n                    }\n                }\n\n                )\n            })\n        })\n        socket.on(\"connect_error\", () => {\n            setUser({loggedIn: false})\n        });\n\n        console.log(\"useSocketSetup\")\n        return () => {\n            socket.off(\"connect_error\");\n        }\n    }, [setUser]);\n};\n\nexport default useSocketSetup;"],"mappings":";AAAA,SAASA,UAAU,EAACC,SAAS,QAAQ,OAAO;AAC5C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAAQC,cAAc,QAAO,mBAAmB;AAEhD,MAAMC,cAAc,GAAGC,aAAa,IAAI;EAAAC,EAAA;EACpC,MAAM;IAACC;EAAO,CAAC,GAAEP,UAAU,CAACG,cAAc,CAAC;EAE3CF,SAAS,CAAC,MAAM;IACZC,MAAM,CAACM,OAAO,CAAC,CAAC;IAChBN,MAAM,CAACO,EAAE,CAAC,SAAS,EAAEC,UAAU,IAAI;MAC/BL,aAAa,CAACK,UAAU,CAAC;IAC7B,CAAC,CAAC;IAEFR,MAAM,CAACO,EAAE,CAAC,WAAW,EAAE,CAACE,MAAM,EAAEC,QAAQ,KAAK;MACzCP,aAAa,CAACQ,WAAW,IAAI;QACzB,MAAMC,OAAO,GAAG,CAAC,GAAGD,WAAW,CAAC;QAChC,OAAOC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;UACzB,IAAIF,OAAO,CAACF,QAAQ,KAAKA,QAAQ,EAAC,CAElC;QACJ,CAEA,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC;IACFV,MAAM,CAACO,EAAE,CAAC,eAAe,EAAE,MAAM;MAC7BF,OAAO,CAAC;QAACU,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,OAAO,MAAM;MACTjB,MAAM,CAACkB,GAAG,CAAC,eAAe,CAAC;IAC/B,CAAC;EACL,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CA9BIF,cAAc;AAgCpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}